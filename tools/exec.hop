;*=====================================================================*/
;*    serrano/prgm/project/hop/jsbench/tools/exec.hop                  */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Mon Apr 17 19:51:13 2017                          */
;*    Last change :  Tue Apr 30 16:36:01 2019 (serrano)                */
;*    Copyright   :  2017-19 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    exec sync                                                        */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module _exec

   (library hopscript hop hopwidget nodejs)
   
   (export (hopscript ::JsGlobalObject ::JsObject ::JsObject ::JsObject)))

;*---------------------------------------------------------------------*/
;*    hopscript ...                                                    */
;*---------------------------------------------------------------------*/
(define (hopscript %this this scope module)
   
   (define (js-tofixnum n %this)
      (let ((n (js-tointeger n %this)))
	 (cond
	    ((fixnum? n) n)
	    ((flonum? n) (flonum->fixnum n))
	    (else 0))))
   
   (with-access::JsGlobalObject %this (__proto__)
      
      (define exports (js-get module (& "exports") %this))
      
      ;; bind the module in the systime scope
      (js-put! scope (& "module") module #f %this)
      
      ;; system
      (js-bind! %this exports (& "system")
	 :value (js-make-function %this
		   (lambda (this cmd)
		      (let* ((p (run-process "sh" "-c" (js-jsstring->string cmd)
				   :output "/dev/null"
				   :error "/dev/null"
				   :wait #t))
			     (x (process-exit-status p)))
			 x))
		   1 "system")
	 :writable #f
	 :enumerable #f)))

;*---------------------------------------------------------------------*/
;*    The return value for dynamic-load                                */
;*---------------------------------------------------------------------*/
hopscript

